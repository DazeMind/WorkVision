# Documentaci√≥n T√©cnica - WorkVision App

## üìÑ Resumen General

**WorkVision App** es una aplicaci√≥n web modular de gesti√≥n empresarial orientada a empresas que operan con proyectos, producci√≥n, venta de productos o servicios, o reventa. Est√° desarrollada con Laravel + Vue.js en un monolito SPA mediante Inertia.js, y utiliza MySQL como sistema de base de datos relacional.

## ‚öôÔ∏è Tecnolog√≠as Utilizadas

* **Frontend:** Vue.js
* **Backend:** Laravel
* **SPA Manager:** Inertia.js
* **Base de datos:** MySQL
* **Planeado a futuro:** Integraci√≥n con Node.js para funciones en tiempo real (realtime)

## üë§ Flujo de Registro de Usuarios

1. **Registro de usuario (tabla: `users`)**

   * Datos: nombre, correo electr√≥nico, contrase√±a.

2. **Formulario de cliente (tabla: `clients`)**

   * Datos personales: nombre completo, RUT, direcci√≥n, tel√©fono, email.

3. **Perfil del cliente**

   * Registro de datos bancarios (tabla: `bank_data`)
   * Registro de empresa (tabla: `companies`) con:

     * Nombre, correo, RUT empresa, direcci√≥n, tel√©fono, fecha de creaci√≥n
     * Indicador de tipo de gesti√≥n: proyectos o ventas/pedidos

## üîπ M√≥dulos del Sistema

### 1. Dashboard

* Estad√≠sticas, gr√°ficos y accesos r√°pidos.

### 2. Colaboradores

* CRUD de trabajadores (`workers`)
* Relaci√≥n trabajador-empresa (`workers_companies`)

### 3. Proyectos / Ventas

* Si la empresa maneja **proyectos**:

  * Gesti√≥n de proyectos (`projects`) y tareas (`tasks`)
  * Registro de asistencias (`attendances`)

* Si la empresa maneja **ventas/pedidos**:

  * Registro de ordenes (`orders`, `order_details`)
  * Cliente asociado (`consumers`)
  * Productos/servicios (`products_services`)
  * C√°lculo autom√°tico de totales y descuento

### 4. Inventario y Producci√≥n

* Productos simples o servicios (`products_services`)
* Insumos o materias primas (`materials`)
* Recetas o confecciones (`product_compositions` + `composition_items`)
* Registro de producci√≥n (`production_orders` + `production_consumptions`)
* Registro de inventario f√≠sico (`inventariess`)

### 5. Finanzas

* Registro de ingresos y egresos (`records`)
* Asociaci√≥n a billeteras (`wallets`) y categor√≠as (`categories`)
* Subida de respaldo (boleta, imagen, etc.)

### 6. Compras / Reventa

* Proveedores (`suppliers`)
* √ìrdenes de compra (`purchase_orders`, `purchase_order_items`)
* C√°lculo de costo promedio y margen en ventas

## üîê Seguridad y Auditor√≠a

* Registro de acciones del usuario (`audit_logs`)
* Estados de registro y control de eliminaci√≥n l√≥gica (`deleted_at`, `id_state`)

## üë®‚Äçüíº Escalabilidad Planeada

* Multiempresa por cliente (actualmente 1 empresa por cliente, preparado para m√∫ltiples)
* Funciones realtime mediante Node.js y WebSockets
* API para integraci√≥n con servicios de pago, facturaci√≥n, bancos
* Aplicaci√≥n m√≥vil futura (compartiendo backend actual)

## üìä Objetivos del Sistema

* Control centralizado de operaciones empresariales
* Adaptabilidad a diferentes rubros (construcci√≥n, gastronom√≠a, comercio, servicios)
* Optimizar la toma de decisiones con informaci√≥n en tiempo real

---

**Estado actual:** MVP funcional con m√≥dulos base operativos. En desarrollo continuo.

**Pr√≥ximos pasos:** profundizar gesti√≥n de compras, integrar KPIs y alertas en Dashboard, y comenzar la base para la app m√≥vil.
